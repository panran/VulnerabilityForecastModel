#!/usr/bin/env python
# -*- coding:utf8 -*-
import matplotlib.pylab as plt
import xlrd
import math
from scipy import interpolate
import numpy as np

def readData(file , index=0):
    workbook=xlrd.open_workbook(file)
    sheet=workbook.sheet_by_index(0)
    data=sheet.row_values(index)
    #读取数据
    return data


def Data_Model(data,type,name,color):
    plt.rcParams['font.sans-serif'] = ['SimHei']  # 用来正常显示中文标签

    plt.plot(data,type,color=color, label=name)
    font1 = {'family': 'Times New Roman',
             'weight': 'normal',
             'size': 15,
             }

    plt.legend(prop=font1)


    font2 = {'family': 'Times New Roman',
             'weight': 'normal',
             'size': 20,
             }
    plt.title(name,font2)
    plt.xlabel('Time(month)',font2)
    plt.ylabel('Nmuber(one)',font2)

def Data_Model_line(data,line_type,name,color):
    plt.rcParams['font.sans-serif'] = ['SimHei']  # 用来正常显示中文标签

    plt.plot(data,line_type,color=color, label=name,linewidth=0.8)
    # plt.plot(data, '',color=color)
    font1 = {'family': 'Times New Roman',
             'weight': 'normal',
             'size': 15,
             }

    plt.legend(prop=font1)



if __name__ == "__main__":

    figsize = 14, 16
    figure, ax = plt.subplots(figsize=figsize)

    win_xp_data = readData('../dataSet/' + 'win_xp' + '.xlsx')
    # 读取win_xp漏洞数据
    win_server_2003_data = readData('../dataSet/' + 'win_server_2003' + '.xlsx')
    # 读取win_server漏洞数据

    xp_pre = readData('../dataSet/' + 'win_xp_pre' + '.xlsx')
    server_2003_pre = readData('../dataSet/' + 'win_server_2003_pre' + '.xlsx')
    plt.subplot(1, 2, 1)

    Data_Model_line(xp_pre, '-','Model prediction', 'green')
    Data_Model(win_xp_data,'o', 'win_xp', 'red')
    plt.xlim(0, 80)
    plt.ylim(0, 450)
    plt.grid()  # 生成网格


    # PMGTV_Model(983.6903, 0.0911, 44.3347, 0.8906, 0.7714, 100, 'blue')
    plt.subplot(1, 2, 2)
    Data_Model_line(server_2003_pre,'-', 'Model prediction', 'green')
    Data_Model(win_server_2003_data, 'o','win_server_2003', 'blue')
    plt.ylim(0, 350)
    plt.grid()  # 生成网格
    plt.show()