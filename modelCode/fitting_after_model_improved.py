#!/usr/bin/env python
# -*- coding:utf8 -*-
import matplotlib.pylab as plt
import xlrd
import math
from scipy import interpolate
import numpy as np

def readData(file , index=0):
    workbook=xlrd.open_workbook(file)
    sheet=workbook.sheet_by_index(0)
    data=sheet.row_values(index)
    #读取数据
    return data

def Data_Model(data,type,name,color):
    plt.rcParams['font.sans-serif'] = ['SimHei']  # 用来正常显示中文标签

    plt.plot(data,type,color=color, label=name)
    font1 = {'family': 'Times New Roman',
             'weight': 'normal',
             'size': 15,
             }

    plt.legend(prop=font1)


    font2 = {'family': 'Times New Roman',
             'weight': 'normal',
             'size': 20,
             }
    plt.title(name,font2)
    plt.xlabel('Time(month)',font2)
    plt.ylabel('Nmuber(one)',font2)

def Data_Model_line(data,line_type,name,color):
    plt.rcParams['font.sans-serif'] = ['SimHei']  # 用来正常显示中文标签

    plt.plot(data,line_type,color=color, label=name,linewidth=0.8)
    # plt.plot(data, '',color=color)
    font1 = {'family': 'Times New Roman',
             'weight': 'normal',
             'size': 15,
             }

    plt.legend(prop=font1)



if __name__ == "__main__":
    data = []



    figsize = 14, 16

    figure, ax = plt.subplots(figsize=figsize)
    win_xp = readData('../dataSet/' + 'win_xp' + '.xlsx')
    win_xp_MGTV = readData('../dataSet/' + 'win_xp_MGTV' + '.xlsx')

    win_server_2003 = readData('../dataSet/' + 'win_server_2003' + '.xlsx')
    win_server_2003_MGTV = readData('../dataSet/' + 'win_server_2003_MGTV' + '.xlsx')

    mac_os_server = readData('../dataSet/' + 'mac_os_server' + '.xlsx')
    mac_os_server_MGTV = readData('../dataSet/' + 'mac_os_server_MGTV' + '.xlsx')

    ubuntu_linux = readData('../dataSet/' + 'ubuntu_linux' + '.xlsx')
    ubuntu_linux_MGTV = readData('../dataSet/' + 'ubuntu_linux_MGTV' + '.xlsx')
    plt.subplot(1, 1, 1)
    #
    plt.xlim(0, 80)
    plt.ylim(0, 450)
    Data_Model(win_xp, '*', 'win_xp', 'green')
    Data_Model_line(win_xp_MGTV, '-', 'prediction', 'blue')

    Data_Model(win_server_2003, 'o', 'win_server_2003', 'red')
    Data_Model_line(win_server_2003_MGTV, '-', 'prediction', 'blue')

    Data_Model(mac_os_server, 's', 'mac_os_server', 'black')
    Data_Model_line(mac_os_server_MGTV, '-', 'prediction', 'blue')
    #

    Data_Model(ubuntu_linux, 'v', 'ubuntu_linux', 'purple')
    Data_Model_line(ubuntu_linux_MGTV, '-', 'prediction', 'purple')
    font2 = {'family': 'Times New Roman',
         'weight': 'normal',
         'size': 20,
         }
    plt.xlabel('Time(month)', font2)
    plt.ylabel('Number(one)', font2)
    plt.title('Model fitting', font2)
    plt.grid()  # 生成网格
    plt.show()