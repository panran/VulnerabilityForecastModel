#!/usr/bin/env python
#-*- coding:utf8 -*-
import matplotlib.pylab as plt
import xlrd
import math

vulu_file=['win_7','win_xp','win_server_2003','ubuntu_linux','Linux_kernelData','mac_os_server']

def readData(file , index=0):
    workbook=xlrd.open_workbook(file)
    sheet=workbook.sheet_by_index(0)
    data=sheet.row_values(index)
    #读取数据
    return data

def Data_Model(data,name,color):
    plt.plot(data,'.',color=color, label=name+'_Data')
    plt.legend()
    plt.title(name + '_model')

def PMGTV_Model(M,A,B,Alph,Beta,time,color):
    #模型参数为5个
    y=[]
    for k in range(time):
        #time表示横向时间轴的长度
        value = M/math.pow(1+math.pow(math.e,A*(B-k)),math.pow(Alph,k)+Beta)
        y.append(value)

    plt.plot(y,color=color, label='PMGTV_Model',linewidth=1.0)
    plt.legend()
    plt.xlabel('Time(month)')
    plt.ylabel('number(one)')
    print('模型相关参数：'+'M='+M.__str__()+'  '+'A='+A.__str__()+'  '+'B='+B.__str__()+'  '+'Alph='+Alph.__str__()+'  '+'Beta='+Beta.__str__())
    #plt.show()
    return y

def RE_Model(N,Gama,time,color):
    y=[]
    for i in range(time):
        #y.append((K/Gama)*math.log(3,C^time))
        value =  N*(1-(math.pow(math.e,-Gama*i)))
        y.append(value)
        y[0]=0.00004
    #print(y)
    plt.plot(y,color=color, label='RE_Model',linewidth=1.0)
    plt.legend()
    plt.xlabel('Time(month)')
    plt.ylabel('number(one)')
    return y

def AT_Model(K,Gama,C,time,color):
    y = []
    for i in range(time):
        value = (K/Gama)*math.log(C*(i+1))
        y.append(value)

    #print(y)
    plt.plot(y, color=color, label='AT_Model',linewidth=1.0)
    plt.legend()
    plt.xlabel('Time(month)')
    plt.ylabel('number(one)')
    return y

def LP_Model(A,B,time,color):
    y = []
    for i in range(time):
        value = A * math.log(1 + B*i)
        y.append(value)

    #print(y)
    plt.plot(y, color=color, label='LP_Model',linewidth=1.0)
    plt.legend()
    plt.xlabel('Time(month)')
    plt.ylabel('number(one)')
    return y

def AML_Model(A,B,C,time,color):
    y = []
    for i in range(time):
        value = B/(1+B*C*math.pow(math.e,(-A*B*i)))
        y.append(value)

    #print(y)
    plt.plot(y, color=color, label='LP_Model',linewidth=1.0)
    plt.legend()
    plt.xlabel('Time(month)')
    plt.ylabel('number(one)')
    return y

def SSE(y_predict,y_actual):
    SSE = 0
    for i in range(len(y_actual)):
        SSE = SSE + math.pow((y_actual[i]-y_predict[i]),2)
    return SSE

def Kafang(y_predict,y_actual):
    kaFang = 0
    for i in range(len(y_actual)):
       # print(y_predict[i])
        kaFang = kaFang + (math.pow((y_actual[i] - y_predict[i]), 2)/(y_predict[i]+0.000002))
    return kaFang


if __name__=="__main__":
    data=[]

    #vulu_file里面存放的是文件名
    # vulu_file=['win_7.xlsx',
    #            'win_xp.xlsx',
    #            'win_server_2003.xlsx',
    #            'ubuntu_linux.xlsx',
    #            'Linux_kernelData.xlsx',
    #            'mac_os_server.xlsx']
    data.append(readData('../dataSet/' + vulu_file[0]+'.xlsx'))
    #  获取win_7漏洞数据

    #  获取win_xp漏洞数据
    data.append(readData('../dataSet/' + vulu_file[1]+'.xlsx'))

    #  获取win_server_2003漏洞数据
    data.append(readData('../dataSet/' + vulu_file[2]+'.xlsx'))

    #  获取ubuntu_linux漏洞数据
    data.append(readData('../dataSet/' + vulu_file[3]+'.xlsx'))

    #  获取mac_os_server漏洞数据
    data.append(readData('../dataSet/' + vulu_file[4]+'.xlsx'))

    figsize = 15, 12

    figure, ax = plt.subplots(figsize=figsize)
    plt.subplot(2,1,1)  #参数依次为行，列，第几项
    Data_Model(data[0],vulu_file[0],'green')
    M1=RE_Model(1578, 0.011268, 200, 'red')
    M2=PMGTV_Model(983.6903, 0.0911, 44.3347, 0.8906, 0.7714, 200, 'blue')
    M3=AT_Model(780, 3.87, 1.33,200,'black')
    M4=LP_Model(487, 0.0721, 200,'purple')
    M5=AML_Model(0.00017129, 905, 0.383547,200,'brown')
    print('图 1 RE_Model预测win_7的SSE值：', SSE(M1, data[0]))
    print('图 1 RE_Model预测win_7的卡方系数值：', Kafang(M1, data[0]))
    print()
    print('图 1 PMGTV_Model预测win_7的SSE值：',SSE(M2,data[0]))
    print('图 1 PMGTV_Model预测win_7的卡方系数值：', Kafang(M2,data[0]))
    print()
    print('图 1 AT_Model预测win_7的SSE值：', SSE(M3, data[0]))
    print('图 1 AT_Model预测win_7的卡方系数值：', Kafang(M3, data[0]))
    print()
    print('图 1 LP_Model预测win_7的SSE值：', SSE(M4, data[0]))
    print('图 1 LP_Model预测win_7的卡方系数值：', Kafang(M4, data[0]))
    print()
    print('图 1 AML_Model预测win_7的SSE值：', SSE(M5, data[0]))
    print('图 1 AML_Model预测win_7的卡方系数值：', Kafang(M5, data[0]))
    print()
    plt.subplot(2,2,3)
    Data_Model(data[0], vulu_file[0], 'red')
    PMGTV_Model(983.6903, 0.0911, 44.3347, 0.8906, 0.7714, 100, 'blue')

   # plt.subplot(3, 2, 4)
    Data_Model(data[1], vulu_file[1], 'green')
    PMGTV_Model(433.8761, 0.1193, 52.9811, 0.9013, 0.6712, 100, 'blue')

    plt.subplot(2, 2, 4)
    Data_Model(data[2], vulu_file[2], 'red')
    PMGTV_Model(288.8254, 0.2583, 32.9221, 0.6143, 0.3101, 100, 'blue')

    #plt.subplot(3, 2, 6)
    Data_Model(data[3], vulu_file[3], 'green')
    m=PMGTV_Model(267.6877, 0.1514, 39.8808, 0.5919, 0.8117, 100, 'blue')

    plt.show()